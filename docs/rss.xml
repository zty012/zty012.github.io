<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>ZTY</title><link>https://zty012.de</link><description>ZTY 的个人博客</description><copyright>ZTY</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/89395757?v=4</url><title>avatar</title><link>https://zty012.de</link></image><lastBuildDate>Sat, 09 Nov 2024 06:57:30 +0000</lastBuildDate><managingEditor>ZTY</managingEditor><ttl>60</ttl><webMaster>ZTY</webMaster><item><title>批量重命名 APK 文件为应用名称</title><link>https://zty012.de/post/pi-liang-zhong-ming-ming-%20APK%20-wen-jian-wei-ying-yong-ming-cheng.html</link><description>&gt; [!WARNING]&#13;
&gt; 此脚本需要安装 Android Build Tools，并且将 `~/Android/Sdk/build-tools/35.0.0/aapt` 替换为你的 aapt 位置&#13;
&#13;
```bash&#13;
for apk in *.apk; do&#13;
    label=$(~/Android/Sdk/build-tools/35.0.0/aapt dump badging '$apk' | grep -Po '^application-label:'\K.*?(?='$)')&#13;
    if [[ -z '$label' ]]; then&#13;
        echo 'error $apk'&#13;
        continue&#13;
    fi&#13;
    mv '$apk' '$label.apk'&#13;
    echo '$apk -&gt; $label.apk'&#13;
done&#13;
```。</description><guid isPermaLink="true">https://zty012.de/post/pi-liang-zhong-ming-ming-%20APK%20-wen-jian-wei-ying-yong-ming-cheng.html</guid><pubDate>Sat, 09 Nov 2024 06:57:08 +0000</pubDate></item><item><title>Linux Chrome 无法播放视频</title><link>https://zty012.de/post/Linux%20Chrome%20-wu-fa-bo-fang-shi-pin.html</link><description>参考 [this comment](https://bbs.archlinux.org/viewtopic.php?pid=1650542#p1650542)&#13;
&#13;
```sh&#13;
rm -rf ~/.config/chromium/GrShaderCache&#13;
rm -rf ~/.config/chromium/Default/GPUCache&#13;
```&#13;
&#13;
如果还不行:&#13;
&#13;
[this telegram message](https://t.me/archlinuxcn_group/3354458)。</description><guid isPermaLink="true">https://zty012.de/post/Linux%20Chrome%20-wu-fa-bo-fang-shi-pin.html</guid><pubDate>Tue, 29 Oct 2024 12:33:48 +0000</pubDate></item><item><title>Linux 脚本: 安装最近的指定个 apk 文件</title><link>https://zty012.de/post/Linux%20-jiao-ben--%20-an-zhuang-zui-jin-de-zhi-ding-ge-%20apk%20-wen-jian.html</link><description>```sh&#13;
#!/bin/zsh&#13;
&#13;
# 检查参数是否有效&#13;
if [ $# -eq 0 ]; then&#13;
  # 如果没有参数，使用zenity获取值&#13;
  n=$(zenity --entry --title='Install latest APKs' --text='Count:')&#13;
  if [ $? -ne 0 ]; then&#13;
    echo 'Zenity canceled.'&#13;
    exit 1&#13;
  fi&#13;
&#13;
  # 检查返回值是否为数字&#13;
  if ! [[ '$n' =~ ^[0-9]+$ ]]; then&#13;
    n=1  # 如果不是数字，则设置为1&#13;
  fi&#13;
else&#13;
  # 如果有参数，直接使用参数值&#13;
  n=$1&#13;
fi&#13;
&#13;
# 初始化进度条&#13;
{&#13;
  # 使用 find、sort 和 head 获取 APK 文件列表，并逐行读取&#13;
  find ~/Downloads -type f -name '*.apk' | sort -rn | head -n '$n' | while read -r apk_file; do&#13;
    # 显示正在安装的文件名&#13;
    echo '# Installing: $(basename '$apk_file')'  # 显示文件名&#13;
    # 计算进度&#13;
    echo $(( (i + 1) * 100 / n )) # 更新进度&#13;
    ((i++))  # 增加计数器&#13;
&#13;
    # 执行安装命令&#13;
    adb install '$apk_file'&#13;
  done&#13;
} | zenity --progress --title='Installing APKs' --text='Installing APKs...' --percentage=0 --width=300 --auto-close&#13;
&#13;
# 检查进度条是否被取消&#13;
if [ $? -ne 0 ]; then&#13;
  echo 'Installation canceled.'&#13;
  exit 1&#13;
fi。</description><guid isPermaLink="true">https://zty012.de/post/Linux%20-jiao-ben--%20-an-zhuang-zui-jin-de-zhi-ding-ge-%20apk%20-wen-jian.html</guid><pubDate>Sat, 26 Oct 2024 12:16:34 +0000</pubDate></item><item><title>验证 GPG 密码</title><link>https://zty012.de/post/yan-zheng-%20GPG%20-mi-ma.html</link><description>1. 将密码写入 `/tmp/p`，每行一个&#13;
2. 将任意内容写入 `/tmp/in`&#13;
3. 获取私钥 `gpg --list-secret-keys --keyid-format=long`&#13;
4. `for p in `cat /tmp/passphrases`; do echo '$p' | gpg -q --sign --local-user &lt;secret&gt; --passphrase-fd 0 --output /dev/null --yes /tmp/test.in &amp;&amp; (echo 'CORRECT passphrase: $p' &amp;&amp; break); done`。</description><guid isPermaLink="true">https://zty012.de/post/yan-zheng-%20GPG%20-mi-ma.html</guid><pubDate>Sat, 19 Oct 2024 10:23:23 +0000</pubDate></item><item><title>修复 Linux 打开文件夹弹出 Kitty</title><link>https://zty012.de/post/xiu-fu-%20Linux%20-da-kai-wen-jian-jia-dan-chu-%20Kitty.html</link><description>编辑 `~/.config/mimeapps.list`，找到 `inode/directory`，修改值为你的文件管理器比如 `org.gnome.Nautilus.desktop`。</description><guid isPermaLink="true">https://zty012.de/post/xiu-fu-%20Linux%20-da-kai-wen-jian-jia-dan-chu-%20Kitty.html</guid><pubDate>Sun, 13 Oct 2024 04:34:28 +0000</pubDate></item><item><title>Nautilus 配置“在终端中打开“选项</title><link>https://zty012.de/post/Nautilus%20-pei-zhi-%E2%80%9C-zai-zhong-duan-zhong-da-kai-%E2%80%9C-xuan-xiang.html</link><description>首先需要安装一个插件 [Stunkymonkey/nautilus-open-any-terminal](https://github.com/Stunkymonkey/nautilus-open-any-terminal)，我这边用的是 AUR 安装&#13;
&#13;
然后用 `dconf-editor`，编辑插件的配置&#13;
&#13;
![image](https://github.com/user-attachments/assets/0024de1c-4957-4bb1-b1aa-ab8ac19f415f)&#13;
&#13;
其中 `custom-local-command` 可以填写终端可执行文件的路径，如果在 PATH 里面可以直接写文件名，比如 `foot`&#13;
&#13;
然后打开 Nautilus，发现插件根本没用，找到了这篇 Issue [#125](https://github.com/Stunkymonkey/nautilus-open-any-terminal/issues/125)&#13;
&#13;
执行 `nautilus -q`，然后再打开 Nautilus，就可以用了。</description><guid isPermaLink="true">https://zty012.de/post/Nautilus%20-pei-zhi-%E2%80%9C-zai-zhong-duan-zhong-da-kai-%E2%80%9C-xuan-xiang.html</guid><pubDate>Sat, 12 Oct 2024 11:42:47 +0000</pubDate></item><item><title>Tauri v2 窗口没反应</title><link>https://zty012.de/post/Tauri%20v2%20-chuang-kou-mei-fan-ying.html</link><description>现象：窗口是透明的，完全没反应&#13;
&#13;
首先在 `lib.rs` 里面添加打开 Devtools 的代码&#13;
&#13;
```diff&#13;
use tauri::Manager;&#13;
&#13;
// Learn more about Tauri commands at https://tauri.app/v1/guides/features/command&#13;
#[tauri::command]&#13;
fn greet(name: &amp;str) -&gt; String {&#13;
    format!('Hello, {}! You've been greeted from Rust!', name)&#13;
}&#13;
&#13;
#[cfg_attr(mobile, tauri::mobile_entry_point)]&#13;
pub fn run() {&#13;
    tauri::Builder::default()&#13;
+       .setup(|app| {&#13;
+           #[cfg(debug_assertions)] // only include this code on debug builds&#13;
+           {&#13;
+               let window = app.get_webview_window('main').unwrap();&#13;
+               window.open_devtools();&#13;
+           }&#13;
+           Ok(())&#13;
+       })&#13;
        .plugin(tauri_plugin_fs::init())&#13;
        .plugin(tauri_plugin_dialog::init())&#13;
        .plugin(tauri_plugin_os::init())&#13;
        .plugin(tauri_plugin_shell::init())&#13;
        .invoke_handler(tauri::generate_handler![greet])&#13;
        .run(tauri::generate_context!())&#13;
        .expect('error while running tauri application');&#13;
}&#13;
```&#13;
&#13;
发现 Devtools 中没有任何内容，鉴定为卡了&#13;
&#13;
把前端代码中有关 Tauri 的部分注释掉，用浏览器打开 http://localhost:1420/&#13;
&#13;
用浏览器的 Devtools 查看报错&#13;
&#13;
我 就 知 道&#13;
&#13;
```&#13;
Uncaught RangeError: Maximum call stack size exceeded&#13;
```。</description><guid isPermaLink="true">https://zty012.de/post/Tauri%20v2%20-chuang-kou-mei-fan-ying.html</guid><pubDate>Tue, 01 Oct 2024 11:31:59 +0000</pubDate></item><item><title>JS 获取文字实际宽度</title><link>https://zty012.de/post/JS%20-huo-qu-wen-zi-shi-ji-kuan-du.html</link><description>```ts&#13;
export function getTextSize(text: string, size: number): Vector {&#13;
  const canvas = document.createElement('canvas');&#13;
  const context = canvas.getContext('2d');&#13;
  if (!context) {&#13;
    throw new Error('Failed to get canvas context');&#13;
  }&#13;
  context.font = `${size}px system-ui`;&#13;
  const metrics = context.measureText(text);&#13;
  return new Vector(metrics.width, size);&#13;
}&#13;
```。</description><guid isPermaLink="true">https://zty012.de/post/JS%20-huo-qu-wen-zi-shi-ji-kuan-du.html</guid><pubDate>Tue, 01 Oct 2024 06:07:38 +0000</pubDate></item><item><title>Android 隐藏状态栏和导航栏</title><link>https://zty012.de/post/Android%20-yin-cang-zhuang-tai-lan-he-dao-hang-lan.html</link><description>修改 theme 文件&#13;
&#13;
```xml&#13;
&lt;resources&gt;&#13;
    &lt;style name='AppTheme.FullScreen' parent='Theme.AppCompat.DayNight.NoActionBar'&gt;&#13;
        &lt;item name='android:windowFullscreen'&gt;true&lt;/item&gt;&#13;
        &lt;item name='android:windowLayoutInDisplayCutoutMode'&gt;shortEdges&lt;/item&gt;&#13;
        &lt;item name='android:windowActionBar'&gt;false&lt;/item&gt;&#13;
        &lt;item name='android:windowNoTitle'&gt;true&lt;/item&gt;&#13;
        &lt;item name='android:windowTranslucentNavigation'&gt;true&lt;/item&gt;&#13;
        &lt;item name='android:navigationBarColor'&gt;@android:color/transparent&lt;/item&gt;&#13;
    &lt;/style&gt;&#13;
&lt;/resources&gt;&#13;
```&#13;
&#13;
修改 MainActivity 代码文件&#13;
&#13;
```kotlin&#13;
package liren.project_graph&#13;
&#13;
import android.os.Bundle&#13;
import android.view.WindowInsets&#13;
import android.view.WindowInsetsController&#13;
import android.view.WindowManager&#13;
import androidx.core.view.WindowCompat&#13;
&#13;
class MainActivity : TauriActivity() {&#13;
  override fun onCreate(savedInstanceState: Bundle?) {&#13;
    super.onCreate(savedInstanceState)&#13;
&#13;
    // 设置布局内容（确保在调用窗口相关设置之前）&#13;
    setContentView(R.layout.activity_main)&#13;
&#13;
    // 全屏显示应用内容&#13;
    WindowCompat.setDecorFitsSystemWindows(window, false)&#13;
&#13;
    // 隐藏系统栏 (状态栏和导航栏)&#13;
    window.decorView.windowInsetsController?.let { controller -&gt;&#13;
      controller.hide(WindowInsets.Type.statusBars() or WindowInsets.Type.navigationBars())&#13;
      controller.systemBarsBehavior = WindowInsetsController.BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE&#13;
    }&#13;
&#13;
    // 防止在沉浸模式下屏幕变暗&#13;
    window.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON)&#13;
  }&#13;
}&#13;
```&#13;
&#13;
~~不会还有人不用kotlin吧~~。</description><guid isPermaLink="true">https://zty012.de/post/Android%20-yin-cang-zhuang-tai-lan-he-dao-hang-lan.html</guid><pubDate>Sun, 29 Sep 2024 11:05:17 +0000</pubDate></item><item><title>使用 ffmpeg 录制应用的声音</title><link>https://zty012.de/post/shi-yong-%20ffmpeg%20-lu-zhi-ying-yong-de-sheng-yin.html</link><description>然后用 ffmpeg 录制音频&#13;
&#13;
```bash&#13;
➜  ~ ffmpeg -f pulse -i default output.wav&#13;
&#13;
ffmpeg version n7.0.2 Copyright (c) 2000-2024 the FFmpeg developers&#13;
Press [q] to stop, [?] for help&#13;
```&#13;
&#13;
然后就可以在应用里面播放音频了，会输出到 output.wav。</description><guid isPermaLink="true">https://zty012.de/post/shi-yong-%20ffmpeg%20-lu-zhi-ying-yong-de-sheng-yin.html</guid><pubDate>Thu, 26 Sep 2024 10:30:00 +0000</pubDate></item><item><title>Android Platform Tools 相关环境变量</title><link>https://zty012.de/post/Android%20Platform%20Tools%20-xiang-guan-huan-jing-bian-liang.html</link><description>```bash&#13;
export ANDROID_HOME=/home/&lt;user&gt;/Android/Sdk&#13;
export ANDROID_NDK=/opt/android-ndk&#13;
export NDK_HOME=/opt/android-ndk&#13;
export ANDROID_NDK_HOME=/opt/android-ndk&#13;
export ANDROID_NDK_ROOT=/opt/android-ndk&#13;
```。</description><guid isPermaLink="true">https://zty012.de/post/Android%20Platform%20Tools%20-xiang-guan-huan-jing-bian-liang.html</guid><pubDate>Tue, 24 Sep 2024 11:23:18 +0000</pubDate></item><item><title>PyQt5 支持 fcitx5 输入法</title><link>https://zty012.de/post/PyQt5%20-zhi-chi-%20fcitx5%20-shu-ru-fa.html</link><description>首先安装包 `fcitx5-qt`&#13;
&#13;
```bash&#13;
sudo pacman -S fcitx5-qt&#13;
```&#13;
&#13;
然后把 `/usr/lib/qt/plugins/platforminputcontexts/libfcitx5platforminputcontextplugin.so` 复制到项目里面&#13;
&#13;
在 main 开头插入这段代码&#13;
&#13;
```python&#13;
import platform&#13;
import PyQt5&#13;
&#13;
# 修复fcitx5输入法&#13;
if platform.system() == 'Linux':&#13;
    target_path = (&#13;
        Path(PyQt5.__file__).parent&#13;
        / 'Qt5'&#13;
        / 'plugins'&#13;
        / 'platforminputcontexts'&#13;
        / 'libfcitx5platforminputcontextplugin.so'&#13;
    )&#13;
    source_path = (&#13;
        # 这里是so文件的路径&#13;
        Path(__file__)....... / ... / ...&#13;
    )&#13;
    if not target_path.exists():&#13;
        log(f'修复fcitx5输入法: Copy {source_path} to {target_path}')&#13;
        shutil.copy(source_path, target_path)&#13;
```&#13;
&#13;
## 支持 PyInstaller&#13;
&#13;
在 PyInstaller 参数里面加上 `--add-data &lt;so文件路径&gt;:PyQt5/Qt5/plugins/platforminputcontexts`&#13;
&#13;
```python&#13;
# 打包&#13;
PyInstaller.__main__.run(&#13;
    [&#13;
        '--onefile',&#13;
        '--windowed',&#13;
        f'--icon={path / 'src' / 'project_graph' / 'assets' / 'favicon.ico'}',&#13;
        # 支持fcitx5输入法&#13;
        '--add-data',&#13;
        f'{path / 'lib'/ 'libfcitx5platforminputcontextplugin.so'}:PyQt5/Qt5/plugins/platforminputcontexts',&#13;
        '-n',&#13;
        'project-graph',&#13;
        (path / 'src' / '_package.py').as_posix(),&#13;
    ]&#13;
)&#13;
```。</description><guid isPermaLink="true">https://zty012.de/post/PyQt5%20-zhi-chi-%20fcitx5%20-shu-ru-fa.html</guid><pubDate>Sun, 01 Sep 2024 03:30:36 +0000</pubDate></item><item><title>Chrome 已锁定此个人资料以防止其受损。如果您确定其他进程目前未使用此个人资料，请为其解锁并重新启动 Chrome。</title><link>https://zty012.de/post/Chrome%20-yi-suo-ding-ci-ge-ren-zi-liao-yi-fang-zhi-qi-shou-sun-%E3%80%82-ru-guo-nin-que-ding-qi-ta-jin-cheng-mu-qian-wei-shi-yong-ci-ge-ren-zi-liao-%EF%BC%8C-qing-wei-qi-jie-suo-bing-zhong-xin-qi-dong-%20Chrome%E3%80%82.html</link><description>```&#13;
➜  ~ google-chrome&#13;
[4292:4292:0807/114332.832305:ERROR:process_singleton_posix.cc(353)] 其他计算机 (ZTY-Kubuntu) 的另一个 Google Chrome 进程 (329247) 好像正在使用此个人资料。</description><guid isPermaLink="true">https://zty012.de/post/Chrome%20-yi-suo-ding-ci-ge-ren-zi-liao-yi-fang-zhi-qi-shou-sun-%E3%80%82-ru-guo-nin-que-ding-qi-ta-jin-cheng-mu-qian-wei-shi-yong-ci-ge-ren-zi-liao-%EF%BC%8C-qing-wei-qi-jie-suo-bing-zhong-xin-qi-dong-%20Chrome%E3%80%82.html</guid><pubDate>Wed, 07 Aug 2024 03:48:13 +0000</pubDate></item><item><title>GSI 资源库记录</title><link>https://zty012.de/post/GSI%20-zi-yuan-ku-ji-lu.html</link><description>https://sourceforge.net/projects/andyyan-gsi/files/&#13;
&#13;
https://sourceforge.net/projects/misterztr-gsi/files/。</description><guid isPermaLink="true">https://zty012.de/post/GSI%20-zi-yuan-ku-ji-lu.html</guid><pubDate>Fri, 02 Aug 2024 07:26:16 +0000</pubDate></item><item><title>GSI 文件命名规则记录</title><link>https://zty012.de/post/GSI%20-wen-jian-ming-ming-gui-ze-ji-lu.html</link><description>```&#13;
{arm|a64|arm64}_{a|b}{v|g}{N|S}-{signed|vndklite|secure|personal}&#13;
|               |    |    |     |&#13;
|               |    |    |     signed: Signed with maintainer's keys&#13;
|               |    |    |     vndklite: For VNDKLite devices,&#13;
|               |    |    |               or for read-writeable /system on regular devices&#13;
|               |    |    |     personal: With personal mods, for reference&#13;
|               |    |    |     secure: Superuser removed and system props spoofed&#13;
|               |    |    |&#13;
|               |    |    N: No Superuser&#13;
|               |    |    S: *Built* with PHH Superuser (app needed)&#13;
|               |    |    (Z): *Built* with eremitein's Dynamic Superuser (not offered here)&#13;
|               |    |&#13;
|               |    v: Vanilla, i.e. no GAPPS&#13;
|               |    g: With regular GAPPS&#13;
|               |    o: With Android Go GAPPS&#13;
|               |    (f): With built-in MicroG and FLOSS replacements of GAPPS (not offered here)&#13;
|               |&#13;
|               a: 'A-only', i.e. system-as-system (deprecated since Android 12)&#13;
|               b: 'AB', i.e. system-as-root&#13;
|&#13;
arm: ARM 32-bit (deprecated since Android 12)&#13;
a64: ARM 32-bit with 64-bit binder&#13;
arm64: ARM 64-bit&#13;
```。</description><guid isPermaLink="true">https://zty012.de/post/GSI%20-wen-jian-ming-ming-gui-ze-ji-lu.html</guid><pubDate>Fri, 02 Aug 2024 07:09:30 +0000</pubDate></item><item><title>Ubuntu 以 root 权限清空回收站</title><link>https://zty012.de/post/Ubuntu%20-yi-%20root%20-quan-xian-qing-kong-hui-shou-zhan.html</link><description>```bash&#13;
$ cd ~/.local/share/Trash&#13;
$ sudo rm -rf ./files/* ./info/* &#13;
```。</description><guid isPermaLink="true">https://zty012.de/post/Ubuntu%20-yi-%20root%20-quan-xian-qing-kong-hui-shou-zhan.html</guid><pubDate>Sat, 27 Jul 2024 03:17:16 +0000</pubDate></item><item><title>此设备未经过 Play 保护认证解决方法</title><link>https://zty012.de/post/ci-she-bei-wei-jing-guo-%20Play%20-bao-hu-ren-zheng-jie-jue-fang-fa.html</link><description>1. 打开 [设备注册](https://www.google.com/android/uncertified/)&#13;
2. 方法一：开启开发者模式中的 `以 Root 权限调试`，在电脑上运行页面上提示的命令获取 GMS ID&#13;
   方法二：下载 DeviceID 软件获取 GMS ID&#13;
3. 把获取到的 ID 输入进网页进行注册&#13;
4. 重启手机&#13;
5. 打开一次 Google 登录页面，提示未经过认证，等待一会&#13;
6. 再打开一次登录页面，成功。</description><guid isPermaLink="true">https://zty012.de/post/ci-she-bei-wei-jing-guo-%20Play%20-bao-hu-ren-zheng-jie-jue-fang-fa.html</guid><pubDate>Tue, 16 Jul 2024 12:06:43 +0000</pubDate></item><item><title>Zygisk 无法启用</title><link>https://zty012.de/post/Zygisk%20-wu-fa-qi-yong.html</link><description>https://github.com/sunshine0523/Mi-Freeform/issues/51&#13;
&#13;
搞了半天发现是米窗干的。</description><guid isPermaLink="true">https://zty012.de/post/Zygisk%20-wu-fa-qi-yong.html</guid><pubDate>Tue, 16 Jul 2024 04:58:15 +0000</pubDate></item><item><title>Magisk 启用 Zygisk</title><link>https://zty012.de/post/Magisk%20-qi-yong-%20Zygisk.html</link><description>先禁用所有模块，在首页右上角设置里面启用 Zygisk，重启手机&#13;
&#13;
然后启用模块就好了。</description><guid isPermaLink="true">https://zty012.de/post/Magisk%20-qi-yong-%20Zygisk.html</guid><pubDate>Tue, 16 Jul 2024 04:37:40 +0000</pubDate></item><item><title>GSI 安装 Magisk 过程记录</title><link>https://zty012.de/post/GSI%20-an-zhuang-%20Magisk%20-guo-cheng-ji-lu.html</link><description>&gt; [!WARNING]&#13;
&gt; 本教程适用于 **小米/红米/POCO** 手机&#13;
&#13;
先从 [hyperos.fans](https://hyperos.fans/zh/devices) 下载你设备的**卡刷包**&#13;
&#13;
![下载卡刷包](https://s2.loli.net/2024/07/16/r59BM73JWCXyTaU.png)&#13;
&#13;
&#13;
&gt; [!TIP]&#13;
&gt; Linux 用户可以使用 Wine 运行 [Neat Download Manager](https://www.neatdownloadmanager.com/index.php/en/) 以获得最快下载速度&#13;
&#13;
下载 tgz 系统包后，把 `/images/init_boot.img` 解压出来，传输到手机上（**切记在电脑上也要留一份**）&#13;
&#13;
![提取 init_boot.img](https://s2.loli.net/2024/07/16/72KrY18bgUzpBA5.png)&#13;
&#13;
打开 Magisk，修补 `init_boot.img` 文件&#13;
&#13;
![Magisk 修补结果](https://s2.loli.net/2024/07/16/eEcMnNrPlTq5DsQ.png)&#13;
&#13;
把 Magisk 中显示的 img 文件路径传输到电脑上&#13;
&#13;
接下来开始施法：&#13;
&#13;
[![asciicast](https://asciinema.org/a/Pz6Er5zV8KsGhFcOQ5lVGCSRJ.svg)](https://asciinema.org/a/Pz6Er5zV8KsGhFcOQ5lVGCSRJ)&#13;
&#13;
&gt; [!WARNING]&#13;
&gt; 刷入 `init_boot_*` 分区时，`*` 表示你的系统槽位，如果你不知道的话那就 a 和 b 都试一下&#13;
&#13;
&gt; [!WARNING]&#13;
&gt; 如果手机一直重启，请按住音量下+开机键进入 fastboot，把 init_boot 分区刷回没有经过 Magisk 修复的镜像&#13;
&#13;
开机后打开 Magisk，弹出这个就说明成功了，点击确定就完工了&#13;
&#13;
![Magisk 弹窗](https://s2.loli.net/2024/07/16/keWwNF2GYfLTh3O.png)。</description><guid isPermaLink="true">https://zty012.de/post/GSI%20-an-zhuang-%20Magisk%20-guo-cheng-ji-lu.html</guid><pubDate>Tue, 16 Jul 2024 04:16:16 +0000</pubDate></item><item><title>Android SDK Failed to read or create install properties file</title><link>https://zty012.de/post/Android%20SDK%20Failed%20to%20read%20or%20create%20install%20properties%20file.html</link><description>```&#13;
$ sdkmanager --install 'build-tools;35.0.0'&#13;
Warning: Failed to read or create install properties file.&#13;
```&#13;
&#13;
# 解决方法&#13;
&#13;
```&#13;
$ sudo chmod 777 /lib/android-sdk/*&#13;
```&#13;
。</description><guid isPermaLink="true">https://zty012.de/post/Android%20SDK%20Failed%20to%20read%20or%20create%20install%20properties%20file.html</guid><pubDate>Mon, 15 Jul 2024 08:37:20 +0000</pubDate></item><item><title>CMCL 设置版本隔离</title><link>https://zty012.de/post/CMCL%20-she-zhi-ban-ben-ge-li.html</link><description>如果该版本认定为是一个整合包，那么它的游戏目录将会在它的版本目录。</description><guid isPermaLink="true">https://zty012.de/post/CMCL%20-she-zhi-ban-ben-ge-li.html</guid><pubDate>Sun, 07 Jul 2024 07:26:43 +0000</pubDate></item><item><title>Konsole 设置的默认 Shell 禁用右键菜单和设置了隐藏菜单栏时打开设置页面</title><link>https://zty012.de/post/Konsole%20-she-zhi-de-mo-ren-%20Shell%20-jin-yong-you-jian-cai-dan-he-she-zhi-le-yin-cang-cai-dan-lan-shi-da-kai-she-zhi-ye-mian.html</link><description>1. `konsole -e bash`&#13;
2. 右键新弹出的终端窗口，选择菜单，选择设置。</description><guid isPermaLink="true">https://zty012.de/post/Konsole%20-she-zhi-de-mo-ren-%20Shell%20-jin-yong-you-jian-cai-dan-he-she-zhi-le-yin-cang-cai-dan-lan-shi-da-kai-she-zhi-ye-mian.html</guid><pubDate>Sat, 06 Jul 2024 07:51:48 +0000</pubDate></item><item><title>Linux 安装字体</title><link>https://zty012.de/post/Linux%20-an-zhuang-zi-ti.html</link><description>1. 把字体文件复制到 `/usr/local/share/fonts/`&#13;
2. `fc-cache -fv` 刷新缓存。</description><guid isPermaLink="true">https://zty012.de/post/Linux%20-an-zhuang-zi-ti.html</guid><pubDate>Sat, 06 Jul 2024 07:35:33 +0000</pubDate></item><item><title>Grub 更改主题</title><link>https://zty012.de/post/Grub%20-geng-gai-zhu-ti.html</link><description>1. [下载一个主题](https://www.gnome-look.org/browse?cat=109&amp;ord=latest)&#13;
2. 解压&#13;
3. `sudo cp -r 文件夹名称 /usr/share/grub/themes`&#13;
4. 编辑 `/etc/default/grub`，在结尾添加 `GRUB_THEME='/usr/share/grub/themes/文件夹名称/theme.txt'`&#13;
5. `sudo grub-mkconfig -o /boot/grub/grub.cfg`&#13;
6. 重启。</description><guid isPermaLink="true">https://zty012.de/post/Grub%20-geng-gai-zhu-ti.html</guid><pubDate>Sat, 06 Jul 2024 06:28:13 +0000</pubDate></item><item><title>curl 或 nvm 配置网络代理</title><link>https://zty012.de/post/curl%20-huo-%20nvm%20-pei-zhi-wang-luo-dai-li.html</link><description>编辑 `~/.curlrc` 文件：&#13;
&#13;
```&#13;
proxy = 用户名:密码@host:port&#13;
# 或者&#13;
proxy = host:port&#13;
```。</description><guid isPermaLink="true">https://zty012.de/post/curl%20-huo-%20nvm%20-pei-zhi-wang-luo-dai-li.html</guid><pubDate>Fri, 05 Jul 2024 09:06:18 +0000</pubDate></item><item><title>GitHub CLI 安装踩坑（PUBKEY 报错、下载慢）</title><link>https://zty012.de/post/GitHub%20CLI%20-an-zhuang-cai-keng-%EF%BC%88PUBKEY%20-bao-cuo-%E3%80%81-xia-zai-man-%EF%BC%89.html</link><description>试图安装 GitHub CLI，打开了[官网](https://cli.github.com)复制了安装命令&#13;
&#13;
```bash&#13;
(type -p wget &gt;/dev/null || (sudo apt update &amp;&amp; sudo apt-get install wget -y)) &amp;&amp; sudo mkdir -p -m 755 /etc/apt/keyrings &amp;&amp; wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg &gt; /dev/null &amp;&amp; sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg &amp;&amp; echo 'deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main' | sudo tee /etc/apt/sources.list.d/github-cli.list &gt; /dev/null &amp;&amp; sudo apt update &amp;&amp; sudo apt install gh -y&#13;
```&#13;
&#13;
# 坑 1&#13;
&#13;
```bash&#13;
W: 校验数字签名时出错。</description><guid isPermaLink="true">https://zty012.de/post/GitHub%20CLI%20-an-zhuang-cai-keng-%EF%BC%88PUBKEY%20-bao-cuo-%E3%80%81-xia-zai-man-%EF%BC%89.html</guid><pubDate>Fri, 05 Jul 2024 08:44:00 +0000</pubDate></item><item><title>Linux VSCode 无法使用输入法</title><link>https://zty012.de/post/Linux%20VSCode%20-wu-fa-shi-yong-shu-ru-fa.html</link><description>这种问题会出现在使用 Snap 安装 VSCode 的用户身上，因为 Snap 的沙箱机制导致软件无法与输入法通信，导致只能输入英文&#13;
&#13;
解决办法也很简单：卸载 Snap 安装的 VSCode，通过官网下载的安装包安装 VSCode。</description><guid isPermaLink="true">https://zty012.de/post/Linux%20VSCode%20-wu-fa-shi-yong-shu-ru-fa.html</guid><pubDate>Fri, 28 Jun 2024 05:21:23 +0000</pubDate></item></channel></rss>